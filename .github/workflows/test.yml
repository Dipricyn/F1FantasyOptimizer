# Run tests

name: "Tests"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

defaults:
  run:
    shell: bash

env:
  ALLOW_PLOTTING: true
  SHELLOPTS: "errexit:pipefail"

jobs:
  test:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.image }}"

    strategy:
      matrix:
        os: [ Windows, Ubuntu ]
        python-version: [ "3.10" ]
        include:
          - os: Ubuntu
            image: ubuntu-22.04
          - os: Windows
            image: windows-2022
          - python-version: "3.10"
            tox-env: "py310"
      fail-fast: false

    steps:
      - name: "Check out the Repository"
        uses: "actions/checkout@v3"

      - name: "Install `python` ${{ matrix.python-version }}"
        uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"

      - name: "Install dependencies"
        run: |
          python -m pip install tox tox-gh-actions pytest-github-actions-annotate-failures

      - name: "Run tox for ${{ matrix.python-version }}"
        run: |
          python -m tox -e ${{ matrix.tox-env }}

      - name: "Upload coverage data artifact"
        uses: actions/upload-artifact@v3
        with:
          name: coverage_data
          path: tox-.coverage.*

  coverage:
    name: Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the Repository"
        uses: actions/checkout@v3

      - name: "Install `python` ${{ matrix.python-version }}"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: "Install Dependencies"
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox coverage
          python -m pip install pytest-github-actions-annotate-failures

      - name: "Download Coverage Artifacts"
        uses: actions/download-artifact@v3
        with:
          name: coverage_data

      - name: "Combine Coverage Results"
        run: |
          python -m tox -e coverage

      - name: "Upload coverage data to codecov.io"
        uses: codecov/codecov-action@v3
        with:
          files: ./logs/coverage/coverage.json
          flags: unittests
          name: codecov-f1fantasyoptimizer
          fail_ci_if_error: true
          verbose: true
