[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "f1fantasyoptimizer"
version = "1.0.0"
authors = [
    { name = "Dipricyn", email = "5783337+Dipricyn@users.noreply.github.com" },
]
description = "Find the best team to pick in F1 Fantasy."
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "scraper",
    "scraping",
    "gui",
    "constraint-programming",
    "f1-fantasy",
    "fantasy-f1",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Intended Audience :: End Users/Desktop",
]
dynamic = ["dependencies", "optional-dependencies"]

[project.scripts]
f1fantasyoptimizer = "f1fantasyoptimizer.__main__:main"

[project.gui-scripts]
f1fantasyoptimizer-gui = "f1fantasyoptimizer.ui.gui:main"

[project.urls]
"Homepage" = "https://github.com/Dipricyn/F1FantasyOptimizer"
"Bug Tracker" = "https://github.com/Dipricyn/F1FantasyOptimizer/issues"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
test = { file = ["requirements.test.txt"] }

[tool.setuptools.package-data]
"*" = ["res/*.png"]

[tool.setuptools.packages.find]
where = ["."]
include = ["f1fantasyoptimizer*"]
exclude = ["*tests*"]

[tool.coverage.run]
branch = true
# Append machine name, process id, and random number to data file name so coverage can be
# run in parallel environments, e.g. in tox.
parallel = true
source = [
    "f1fantasyoptimizer/"
]
omit = [
    ".venv/",
    "tests/",
]
disable_warnings = ["no-data-collected"]

[tool.coverage.html]
directory = "logs/coverage/html"

[tool.coverage.json]
output = "logs/coverage/coverage.json"

[tool.coverage.xml]
output = "logs/coverage/coverage.xml"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    '@(abc\.)?abstractmethod',
]

[tool.coverage.paths]
source = [
    "f1fantasyoptimizer/",
    "*/site-packages/",
]
others = [
    "f1fantasyoptimizer/",
    "*/f1fantasyoptimizer",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{310},coverage
isolated_build = true

[gh-actions]
python =
    3.10: py310

[testenv]
deps = -r./requirements.test.txt
setenv =
    COVERAGE_FILE=tox-.coverage.{envname}
commands =
    python -m coverage run -p -m pytest

[testenv:test_scraper]
allowlist_externals =
    sh
deps = -r./requirements.test.txt
setenv =
commands =
    python -m pytest f1fantasyoptimizer/tests/test_scraper.py

[testenv:coverage]
depends = py{310}
allowlist_externals =
    sh
deps = -r./requirements.test.txt
basepython = python3.10
setenv =
    COVERAGE_FILE=tox-.coverage
    COVERAGE_DEBUG=trace
    COVERAGE_DEBUG_FILE=stdout
commands =
    coverage debug data
    coverage combine --debug=pathmap
    coverage report -m --skip-covered
    coverage json
    sh -c 'mv -f tox-.coverage .coverage'
    sh -c 'rm -f tox-.coverage'
parallel_show_output = true
"""